{
  "private": true,
  "name": "commonform.org",
  "description": "web interface for the composition, verification, and sharing of form contracts",
  "version": "0.0.0-prerelease",
  "license": "Apache-2.0",

  "dependencies": {
    "function-bind": "~1.0.2",
    "react": "~0.13.3",
    "reflux": "~0.2.7"
  },

  "devDependencies": {
    "browserify": "~10.2.3",
    "cssmin": "~0.4.3",
    "exorcist": "~0.4.0",
    "html-minifier": "~0.7.2",
    "http-server": "~0.8.0",
    "jscs": "~1.13.1",
    "jshint": "~2.7.0",
    "less": "~2.5.1",
    "phantomjs": "~1.9.17",
    "tape": "~4.0.0",
    "testling": "~1.7.1",
    "uglifyify": "~3.0.1",
    "watchify": "~3.2.1",
    "webdriverio": "~2.4.5"
  },

  "scripts": {
    "analyze": "jshint source test && jscs source test # Static analysis for logic and style errors",

    "build": "npm run scripts && npm run styles && npm run documents # Generate production distribution",
    "scripts": "NODE_ENV=production browserify -g uglifyify source/index.js -d | exorcist build/commonform.js.map > build/commonform.js # Generate production JavaScript bundle",
    "styles": "cat source/*.less | lessc - | cssmin > build/commonform.css # Generate production CSS bundle",
    "documents": "html-minifier -c .html-minifier.json --o build/index.html source/index.html # Generate production HTML documents",

    "watch": "watchify --verbose --debug source/index.js -o build/commonform.js # Regenerate developer JavaScript bundle on source change",

    "start": "if [ ! -f http.pid ] ; then http-server -p 8081 build > http.log 2>&1 & echo $! > http.pid ; fi # Start an HTTP server, saving PID",
    "stop": "kill $(cat http.pid) ; rm http.pid # Stop the HTTP server",

    "startphantom": "if [ ! -f phantom.pid ] ; then phantomjs --webdriver=4444 > phantom.log 2>&1 & echo $! > phantom.pid ; fi # Start a PhantomJS WebDriver server, saving PID",
    "stopphantom": "kill $(cat phantom.pid) ; rm phantom.pid # Stop the PhantomJS WebDriver server",

    "test": "tape test/*.test.js # Run tests",

    "precommit": "npm run analyze && npm run build && npm run test # Git pre-commit hook",
    "travis": "npm run precommit # Run by Travis CI",

    "deploy": "./deploy.sh HEAD # Deploy to production"
  }
}
